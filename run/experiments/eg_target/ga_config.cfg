Geometry = {
	name = "default"
}
Population = {
	name = "default"
}
Fitness = {
	name = "image_eval"
	image_eval = {
		method = "image_evaluation"
		target_filename = "eg_target_E1.png"
		pixels_x = 800
		pixels_y = 600
		bad_weight = 10.0000
		length_weight = 0.000100
		good_weight = 25.0000
		// camera position during evaluation
		Camera = {
			lookat_y = 4.22911
			phi = -1.55638
			theta = 1.49045
			lookat_z = -0.704048
			radius = 10.2392
			lookat_x = 1.27875
			fov = 60.0
			znear = 0.1
			zfar = 100.0
		}
	}
}
Selection = {
	// options: "Tournament", "Roulette" and "Random"
	second = "Tournament"
	first = "Roulette"
	tournament_size = 10
}
Recombination = {
	// no other options here
	name = "single point tree-crossover"
	// not implemented yet
	replace_prob = -1.00000
}
Genome = {
	// values used during fitness calculation
	name = "default"
	optimal_length = 100
	max_length = 900
	// individuals shorter than this will be rejected
	min_length = 4
}
Grammar = {
	// the grammar to generate the target
	// options: "spaceship",  "tree_3_branch_v1", "tree_3_branch_v2", "tree_2_branch", "city", "city_sep", "city_filling"
	name = "tree_3_branch_v1"
	num_threads = 4
	// for the tree grammar the first shape is the trunk
	shape_1 = "trunk.obj"
	// brown
	color_1_r = 0.3411
	color_1_g = 0.2549
	color_1_b = 0.1843

	// the second shape is a leaf
	shape_2 = "leaf.obj"
	// green
	color_2_r = 0.133
	color_2_g = 0.545
	color_2_b = 0.133
}
Algorithm = {
	type = "GeneticAlgorithm"
	name = "ga_baseline"
	population_size = 400
	elitism = 80
	initial_genome_length = 100
	max_generations = 1000
	use_max_runtime = 1
	max_runtime = 600.0
}
Statistics = {
	print_stats = 1
	num_runs = 1
	// save the best of each generation as obj file
	obj_save_final = 1
	obj_save_final_detailed = 0
	obj_save_all = 0
	obj_save_all_detailed = 0
	obj_prefix = "result_"
}
TargetGrammar = {
	// generates the target object for volumetric evaluation
	name = "spaceship_grammar"
	num_threads = 4
	shape_1 = "target_castle.obj"
}
Mutation = {
	name = "cut/grow/permutate"
	permutate_prob = 40.0000
	cut_prob = 30.0000
	grow_prob = 30.0000
	basic_prob = 40.0000
}
